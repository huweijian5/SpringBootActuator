buildscript {
	ext {
		kotlinVersion = '1.1.2-4'
		springBootVersion = '1.5.3.RELEASE'
		springBootAdminVersion = '1.5.0'
	}
	repositories {
		maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '1.0.0'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
	jcenter()
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile("de.codecentric:spring-boot-admin-server:${springBootAdminVersion}")
	compile("de.codecentric:spring-boot-admin-server-ui:${springBootAdminVersion}")
	compile("de.codecentric:spring-boot-admin-server-ui-login:${springBootAdminVersion}")
	compile("de.codecentric:spring-boot-admin-starter-client:${springBootAdminVersion}")
}
